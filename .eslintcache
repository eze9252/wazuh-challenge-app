[{"/Users/eairaudo/wazuh-challenge-app/src/index.js":"1","/Users/eairaudo/wazuh-challenge-app/src/reportWebVitals.js":"2","/Users/eairaudo/wazuh-challenge-app/src/context/Alerts/AlertsState.js":"3","/Users/eairaudo/wazuh-challenge-app/src/context/Alerts/AlertsReducer.js":"4","/Users/eairaudo/wazuh-challenge-app/src/context/Alerts/AlertsContext.js":"5","/Users/eairaudo/wazuh-challenge-app/src/context/types.js":"6","/Users/eairaudo/wazuh-challenge-app/src/store.js":"7","/Users/eairaudo/wazuh-challenge-app/src/containers/navbar/index.js":"8","/Users/eairaudo/wazuh-challenge-app/src/containers/alerts/index.js":"9","/Users/eairaudo/wazuh-challenge-app/src/components/tableAlerts/index.js":"10","/Users/eairaudo/wazuh-challenge-app/src/context/Agents/AgentsState.js":"11","/Users/eairaudo/wazuh-challenge-app/src/context/Agents/AgentsContext.js":"12","/Users/eairaudo/wazuh-challenge-app/src/context/Agents/AgentsReducer.js":"13","/Users/eairaudo/wazuh-challenge-app/src/containers/agents/index.js":"14","/Users/eairaudo/wazuh-challenge-app/src/components/tableAgents/index.js":"15","/Users/eairaudo/wazuh-challenge-app/src/context/Rules/RulesState.js":"16","/Users/eairaudo/wazuh-challenge-app/src/context/Rules/RulesReducer.js":"17","/Users/eairaudo/wazuh-challenge-app/src/context/Rules/RulesContext.js":"18","/Users/eairaudo/wazuh-challenge-app/src/containers/rules/index.js":"19","/Users/eairaudo/wazuh-challenge-app/src/components/tableRules/index.js":"20","/Users/eairaudo/wazuh-challenge-app/src/containers/dashboard/index.js":"21","/Users/eairaudo/wazuh-challenge-app/src/containers/alerts/details/index.js":"22","/Users/eairaudo/wazuh-challenge-app/src/containers/agents/details/index.js":"23","/Users/eairaudo/wazuh-challenge-app/src/containers/rules/details/index.js":"24"},{"size":1915,"mtime":1607196437563,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1607130040111,"results":"27","hashOfConfig":"26"},{"size":1234,"mtime":1607194183256,"results":"28","hashOfConfig":"26"},{"size":449,"mtime":1607194214181,"results":"29","hashOfConfig":"26"},{"size":107,"mtime":1607132623076,"results":"30","hashOfConfig":"26"},{"size":271,"mtime":1607196191003,"results":"31","hashOfConfig":"26"},{"size":210,"mtime":1607177834134,"results":"32","hashOfConfig":"26"},{"size":1073,"mtime":1607198472486,"results":"33","hashOfConfig":"26"},{"size":583,"mtime":1607185946630,"results":"34","hashOfConfig":"26"},{"size":5423,"mtime":1607194954733,"results":"35","hashOfConfig":"26"},{"size":1205,"mtime":1607195698439,"results":"36","hashOfConfig":"26"},{"size":107,"mtime":1607183242162,"results":"37","hashOfConfig":"26"},{"size":464,"mtime":1607195682005,"results":"38","hashOfConfig":"26"},{"size":585,"mtime":1607186229749,"results":"39","hashOfConfig":"26"},{"size":5422,"mtime":1607194984852,"results":"40","hashOfConfig":"26"},{"size":1175,"mtime":1607197413513,"results":"41","hashOfConfig":"26"},{"size":440,"mtime":1607197527743,"results":"42","hashOfConfig":"26"},{"size":105,"mtime":1607184292657,"results":"43","hashOfConfig":"26"},{"size":601,"mtime":1607185961389,"results":"44","hashOfConfig":"26"},{"size":5446,"mtime":1607195720743,"results":"45","hashOfConfig":"26"},{"size":1553,"mtime":1607190954049,"results":"46","hashOfConfig":"26"},{"size":2138,"mtime":1607226172426,"results":"47","hashOfConfig":"26"},{"size":1618,"mtime":1607198055396,"results":"48","hashOfConfig":"26"},{"size":1596,"mtime":1607198065559,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6vkbtq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},"/Users/eairaudo/wazuh-challenge-app/src/index.js",[],["114","115"],"/Users/eairaudo/wazuh-challenge-app/src/reportWebVitals.js",[],"/Users/eairaudo/wazuh-challenge-app/src/context/Alerts/AlertsState.js",[],"/Users/eairaudo/wazuh-challenge-app/src/context/Alerts/AlertsReducer.js",["116"],"import { GET_ALERTS , GET_ALERTS_BY_ID } from '../types'\n\nexport default (state, action) => {\n    const { alerts, alert, type} = action;\n\n    switch(type){\n        case GET_ALERTS:\n            return {\n                ...state,\n                alerts: alerts,\n            };\n        case GET_ALERTS_BY_ID:\n            return {\n                ...state,\n                alert: alert,\n            };\n        default:\n            return state;\n    }\n};","/Users/eairaudo/wazuh-challenge-app/src/context/Alerts/AlertsContext.js",[],"/Users/eairaudo/wazuh-challenge-app/src/context/types.js",[],"/Users/eairaudo/wazuh-challenge-app/src/store.js",[],"/Users/eairaudo/wazuh-challenge-app/src/containers/navbar/index.js",["117"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n})\n\nconst NavBar = (props) => {\n  const classes = useStyles()\n  const handleOnClick = (url) => window.location = url\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <img\n          className=\"logo\"\n          src=\"https://wazuh.com/wp-content/themes/wazuh/assets/images/wazuh_logo.svg\"\n        />\n        <Tabs\n          value={props.value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered>\n          <Tab label=\"Alerts\" onClick={() => handleOnClick('/')} />\n          <Tab label=\"Agents\" onClick={() => handleOnClick('/agents')} />\n          <Tab label=\"Rules\" onClick={() => handleOnClick('/rules')} />\n          <Tab label=\"Dashboard\" onClick={() => handleOnClick('/dashboard')} />\n        </Tabs>\n      </Paper>\n    </>\n  )\n}\n\nexport default NavBar","/Users/eairaudo/wazuh-challenge-app/src/containers/alerts/index.js",["118"],"import React, { useContext, useEffect } from 'react';\n\nimport alertsContext from '../../context/Alerts/AlertsContext'\nimport NavBar from '../navbar'\nimport AlertsTable from '../../components/tableAlerts'\n\nconst Alert = () => {\n\n  const AlertsContext = useContext(alertsContext);\n\n  useEffect(() => {\n    AlertsContext.getAlerts();\n  },[])\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar value={0}/>\n      </header>\n      <div className=\"container-fix\">\n        <AlertsTable alerts={AlertsContext.alerts}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Alert;\n","/Users/eairaudo/wazuh-challenge-app/src/components/tableAlerts/index.js",["119","120"],"import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { useHistory } from 'react-router-dom'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n  { id: '_id', numeric: true, disablePadding: false, label: 'ID' },\n  { id: '_type', numeric: true, disablePadding: false, label: 'Type' },\n  { id: '_index', numeric: false, disablePadding: true, label: 'Index' },\n  { id: '_score', numeric: true, disablePadding: false, label: 'Score' },\n]\n\nfunction AlertsTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nAlertsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nexport default function AlertsTable(props) {\n  const { alerts } = props\n  const [order, setOrder] = useState('asc')\n  const [orderBy, setOrderBy] = useState('_id')\n  const [page, setPage] = useState(0)\n  const [dense, setDense] = useState(false)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n  const history = useHistory()\n  const handleOnClick = useCallback((path) => history.push(path), [history])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, alerts.length - page * rowsPerPage)\n\n  return (\n    <div>\n        <TableContainer>\n          <Table\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\">\n            <AlertsTableHead\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={alerts.length}\n            />\n            <TableBody>\n              {stableSort(alerts, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      onClick={() => handleOnClick( window.location = `/alert/${row._id}`)}\n                      tabIndex={-1}\n                      key={row._id}\n                      selected={false}>\n                      <TableCell align=\"left\">{row._id}</TableCell>\n                      <TableCell align=\"left\">{row._type}</TableCell>\n                      <TableCell align=\"left\">{row._score}</TableCell>\n                      <TableCell align=\"left\">{row._index}</TableCell>\n                    </TableRow>\n                  )\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={alerts.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  )\n}","/Users/eairaudo/wazuh-challenge-app/src/context/Agents/AgentsState.js",[],"/Users/eairaudo/wazuh-challenge-app/src/context/Agents/AgentsContext.js",[],"/Users/eairaudo/wazuh-challenge-app/src/context/Agents/AgentsReducer.js",["121"],"import { GET_AGENTS, GET_AGENTS_BY_ID } from '../types'\n\nexport default (state, action) => {\n    const { agents, agent, type} = action;\n\n    switch(type){\n        case GET_AGENTS:\n            return {\n                ...state,\n                agents: agents,\n            };\n        case GET_AGENTS_BY_ID:\n                return {\n                    ...state,\n                    agent: agent,\n                };\n        default:\n            return state;\n    }\n};","/Users/eairaudo/wazuh-challenge-app/src/containers/agents/index.js",["122"],"import React, { useContext, useEffect } from 'react';\n\nimport agentsContext from '../../context/Agents/AgentsContext'\nimport AgentsTable from '../../components/tableAgents'\nimport NavBar from '../navbar'\n\nconst Agents = () => {\n\n  const AgentsContext = useContext(agentsContext);\n\n  useEffect(() => {\n    AgentsContext.getAgents();\n  },[])\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar value={1}/>\n      </header>\n      <div className=\"container-fix\">\n        <AgentsTable agents={AgentsContext.agents}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Agents;\n","/Users/eairaudo/wazuh-challenge-app/src/components/tableAgents/index.js",["123","124"],"import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { useHistory } from 'react-router-dom'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n  { id: 'id', numeric: true, disablePadding: false, label: 'ID' },\n  { id: 'name', numeric: true, disablePadding: false, label: 'Type' },\n  { id: 'ip', numeric: false, disablePadding: true, label: 'Index' },\n  { id: 'total_alerts', numeric: true, disablePadding: false, label: 'Score' },\n]\n\nfunction AgentsTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nAgentsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nexport default function AgentsTable(props) {\n  const { agents } = props\n  const [order, setOrder] = useState('asc')\n  const [orderBy, setOrderBy] = useState('_id')\n  const [page, setPage] = useState(0)\n  const [dense, setDense] = useState(false)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n  const history = useHistory()\n  const handleOnClick = useCallback((path) => history.push(path), [history])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, agents.length - page * rowsPerPage)\n\n  return (\n    <div>\n        <TableContainer>\n          <Table\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\">\n            <AgentsTableHead\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={agents.length}\n            />\n            <TableBody>\n              {stableSort(agents, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      onClick={() => handleOnClick( window.location = `/agents/${row.id}`)}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={false}>\n                      <TableCell align=\"left\">{row.id}</TableCell>\n                      <TableCell align=\"left\">{row.name}</TableCell>\n                      <TableCell align=\"left\">{row.ip}</TableCell>\n                      <TableCell align=\"left\">{row.total_alerts}</TableCell>\n                    </TableRow>\n                  )\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={agents.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  )\n}","/Users/eairaudo/wazuh-challenge-app/src/context/Rules/RulesState.js",[],"/Users/eairaudo/wazuh-challenge-app/src/context/Rules/RulesReducer.js",["125"],"import { GET_RULES, GET_RULES_BY_ID } from '../types'\n\nexport default (state, action) => {\n    const { rules, rule, type} = action;\n\n    switch(type){\n        case GET_RULES:\n            return {\n                ...state,\n                rules: rules,\n            };\n        case GET_RULES_BY_ID:\n            return {\n                ...state,\n                rule: rule,\n            };  \n        default:\n            return state;\n    }\n};","/Users/eairaudo/wazuh-challenge-app/src/context/Rules/RulesContext.js",[],"/Users/eairaudo/wazuh-challenge-app/src/containers/rules/index.js",["126"],"import React, { useContext, useEffect } from 'react';\n\nimport rulesContext from '../../context/Rules/RulesContext'\nimport NavBar from '../navbar'\nimport AlertsTable from '../../components/tableRules'\n\nconst Rules = () => {\n\n  const RulesContext = useContext(rulesContext);\n\n  useEffect(() => {\n    RulesContext.getRules();\n  },[])\n\n  console.log(RulesContext)\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar value={2}/>\n      </header>\n      <div className=\"container-fix\">\n        <AlertsTable rules={RulesContext.rules}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Rules;\n","/Users/eairaudo/wazuh-challenge-app/src/components/tableRules/index.js",["127","128"],"import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { useHistory } from 'react-router-dom'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n  { id: 'firedtimes', numeric: true, disablePadding: false, label: 'firedtimes' },\n  { id: 'total_alerts', numeric: true, disablePadding: false, label: 'Total Alerts' },\n  { id: 'level', numeric: false, disablePadding: true, label: 'Index' },\n  { id: 'id', numeric: true, disablePadding: false, label: 'Id' },\n]\n\nfunction AlertsTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nAlertsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nexport default function AlertsTable(props) {\n  const { rules } = props\n  const [order, setOrder] = useState('asc')\n  const [orderBy, setOrderBy] = useState('_id')\n  const [page, setPage] = useState(0)\n  const [dense, setDense] = useState(false)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n  const history = useHistory()\n  const handleOnClick = useCallback((path) => history.push(path), [history])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rules.length - page * rowsPerPage)\n\n  return (\n    <div>\n        <TableContainer>\n          <Table\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\">\n            <AlertsTableHead\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rules.length}\n            />\n            <TableBody>\n              {stableSort(rules, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      onClick={() => handleOnClick( window.location =`/rules/${row.id}`)}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={false}>\n                      <TableCell align=\"left\">{row.firedtimes}</TableCell>\n                      <TableCell align=\"left\">{row.total_alerts}</TableCell>\n                      <TableCell align=\"left\">{row.level}</TableCell>\n                      <TableCell align=\"left\">{row.id}</TableCell>\n                    </TableRow>\n                  )\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rules.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  )\n}",["129","130"],"/Users/eairaudo/wazuh-challenge-app/src/containers/dashboard/index.js",["131"],"import React, { useContext, useEffect } from 'react';\nimport 'zingchart/es6'\nimport ZingChart from 'zingchart-react'\nimport agentsContext from '../../context/Agents/AgentsContext'\nimport rulesContext from '../../context/Rules/RulesContext'\nimport NavBar from '../navbar'\n\nconst Dashboard = (props) => {\n\n    const RulesContext = useContext(rulesContext);\n    const AgentsContext = useContext(agentsContext);\n\n    useEffect(() => {\n      AgentsContext.getAgents();\n      RulesContext.getRules();\n    },[])\n\n  const totalAlertsByAgent = AgentsContext.agents.map((agent) => {\n    return { values: [agent.total_alerts], text: agent.name }\n  })\n\n  const totalAlertsByRule = RulesContext.rules.map((rules) => {\n    return { values: [rules.total_alerts], text: rules.description }\n  })\n\n  const configBar = {\n    legend: {\n      draggable: true,\n      'drag-handler': 'icon',\n      icon: {\n        'line-color': 'black',\n      },\n      x: '5%',\n      y: '5%',\n    },\n    type: 'pie',\n  }\n\n  const configAgents = {\n    title: {\n      text: 'Total Alerts by Agent',\n    },\n    ...configBar,\n    series: totalAlertsByAgent,\n  }\n\n  const configRules = {\n    title: {\n      text: 'Total Alerts by Rule',\n    },\n    ...configBar,\n    series: totalAlertsByRule,\n  }\n\n  return (\n    <>\n        <header>\n            <NavBar value={3}/>\n        </header>\n        <br/>\n        <div className=\"padding-dashboard\">\n          <ZingChart data={configAgents} />\n          <br/>\n          <ZingChart data={configRules} />\n        </div>\n    </>\n  )\n}\n\nexport default Dashboard","/Users/eairaudo/wazuh-challenge-app/src/containers/alerts/details/index.js",["132","133"],"import React, { useEffect, useContext } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport alertsContext from '../../../context/Alerts/AlertsContext'\nimport NavBar from '../../navbar'\n\n\nconst AlertDetail = (props) => {\n  const AlertsContext = useContext(alertsContext);\n\n  useEffect(() => {\n    AlertsContext.getAlertsById(props.match.params.id);\n  }, [])\n  return (\n    <>\n    <header>\n        <NavBar value={0}/>\n    </header>\n    <div className=\"container-card\">\n        { Object.keys(AlertsContext.alert).length != 0 ? <Card variant=\"outlined\">\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n              Details of Alert: {AlertsContext.alert._id}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Index: {AlertsContext.alert._index}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Score: {AlertsContext.alert._score}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Type: {AlertsContext.alert._type}\n            </Typography>\n            <Typography  color=\"textSecondary\">\n              Agent name: {AlertsContext.alert._source.agent.name}\n            </Typography>\n            <Typography  color=\"textSecondary\">\n              Cluster: {AlertsContext.alert._source.cluster.name}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Manager: {AlertsContext.alert._source.manager.name}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Rule: {AlertsContext.alert._source.rule.description}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" href=\"/\">\n              Back\n            </Button>\n          </CardActions>\n        </Card> : ''\n        }\n    </div>\n    </>\n  )\n}\n\nexport default AlertDetail;","/Users/eairaudo/wazuh-challenge-app/src/containers/agents/details/index.js",["134","135"],"import React, { useEffect, useContext } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport agentsContext from '../../../context/Agents/AgentsContext'\nimport NavBar from '../../navbar'\n\n\nconst AgentDetail = (props) => {\n  const AgentsContext = useContext(agentsContext);\n\n  useEffect(() => {\n    AgentsContext.getAgentsById(props.match.params.id);\n  }, [])\n   console.log(AgentsContext)\n  return (\n    <>\n    <header>\n        <NavBar value={1}/>\n    </header>\n    <div  className=\"container-card\">\n        { Object.keys(AgentsContext.agent).length != 0 ? <Card variant=\"outlined\">\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n              Details of agent {AgentsContext.agent.id}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              name: {AgentsContext.agent.name}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              ip: {AgentsContext.agent.ip}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Total alerts: {AgentsContext.agent.total_alerts}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" href=\"/agents\">\n              Back\n            </Button>\n          </CardActions>\n        </Card> : ''\n        }\n    </div>\n    </>\n  )\n}\n\nexport default AgentDetail;","/Users/eairaudo/wazuh-challenge-app/src/containers/rules/details/index.js",["136","137"],"import React, { useEffect, useContext } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport rulesContext from '../../../context/Rules/RulesContext'\nimport NavBar from '../../navbar'\n\nconst RuleDetail = (props) => {\n  const RulesContext = useContext(rulesContext);\n\n  useEffect(() => {\n    RulesContext.getRulesById(props.match.params.id);\n  }, [])\n\n  return (\n    <>\n    <header>\n        <NavBar value={2}/>\n    </header>\n    <div  className=\"container-card\">\n       { Object.keys(RulesContext.rule).length != 0 ? <Card variant=\"outlined\">\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n              Details of rule {RulesContext.rule.id}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              description: {RulesContext.rule.description}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              firedtimes: {RulesContext.rule.firedtimes}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Total alerts: {RulesContext.rule.total_alerts}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" href=\"/rules\">\n              Back\n            </Button>\n          </CardActions>\n        </Card> : ''\n        }\n    </div>\n    </>\n  )\n}\n\nexport default RuleDetail;",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":20,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":20,"column":9,"nodeType":"147","endLine":23,"endColumn":11},{"ruleId":"148","severity":1,"message":"149","line":13,"column":5,"nodeType":"150","endLine":13,"endColumn":7,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":47,"column":11,"nodeType":"154","messageId":"155","endLine":47,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":92,"column":17,"nodeType":"154","messageId":"155","endLine":92,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":20,"endColumn":3},{"ruleId":"148","severity":1,"message":"157","line":13,"column":5,"nodeType":"150","endLine":13,"endColumn":7,"suggestions":"158"},{"ruleId":"152","severity":1,"message":"153","line":47,"column":11,"nodeType":"154","messageId":"155","endLine":47,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":92,"column":17,"nodeType":"154","messageId":"155","endLine":92,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":20,"endColumn":3},{"ruleId":"148","severity":1,"message":"159","line":13,"column":5,"nodeType":"150","endLine":13,"endColumn":7,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"153","line":47,"column":11,"nodeType":"154","messageId":"155","endLine":47,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":92,"column":17,"nodeType":"154","messageId":"155","endLine":92,"endColumn":25},{"ruleId":"138","replacedBy":"161"},{"ruleId":"140","replacedBy":"162"},{"ruleId":"148","severity":1,"message":"163","line":16,"column":7,"nodeType":"150","endLine":16,"endColumn":9,"suggestions":"164"},{"ruleId":"148","severity":1,"message":"165","line":16,"column":6,"nodeType":"150","endLine":16,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":23,"column":51,"nodeType":"169","messageId":"170","endLine":23,"endColumn":53},{"ruleId":"148","severity":1,"message":"171","line":16,"column":6,"nodeType":"150","endLine":16,"endColumn":8,"suggestions":"172"},{"ruleId":"167","severity":1,"message":"168","line":24,"column":51,"nodeType":"169","messageId":"170","endLine":24,"endColumn":53},{"ruleId":"148","severity":1,"message":"173","line":15,"column":6,"nodeType":"150","endLine":15,"endColumn":8,"suggestions":"174"},{"ruleId":"167","severity":1,"message":"168","line":23,"column":48,"nodeType":"169","messageId":"170","endLine":23,"endColumn":50},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'AlertsContext'. Either include it or remove the dependency array.","ArrayExpression",["177"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'setDense' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AgentsContext'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'RulesContext'. Either include it or remove the dependency array.",["179"],["175"],["176"],"React Hook useEffect has missing dependencies: 'AgentsContext' and 'RulesContext'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'AlertsContext' and 'props.match.params.id'. Either include them or remove the dependency array.",["181"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'AgentsContext' and 'props.match.params.id'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'RulesContext' and 'props.match.params.id'. Either include them or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [AlertsContext]",{"range":"198","text":"199"},"Update the dependencies array to be: [AgentsContext]",{"range":"200","text":"201"},"Update the dependencies array to be: [RulesContext]",{"range":"202","text":"203"},"Update the dependencies array to be: [AgentsContext, RulesContext]",{"range":"204","text":"205"},"Update the dependencies array to be: [AlertsContext, props.match.params.id]",{"range":"206","text":"207"},"Update the dependencies array to be: [AgentsContext, props.match.params.id]",{"range":"208","text":"209"},"Update the dependencies array to be: [RulesContext, props.match.params.id]",{"range":"210","text":"211"},[335,337],"[AlertsContext]",[336,338],"[AgentsContext]",[327,329],"[RulesContext]",[501,503],"[AgentsContext, RulesContext]",[575,577],"[AlertsContext, props.match.params.id]",[575,577],"[AgentsContext, props.match.params.id]",[566,568],"[RulesContext, props.match.params.id]"]